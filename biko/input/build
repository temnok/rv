#!/usr/bin/env bash
set -e

SCRIPT_START=$(date +%s)
BM_START=$SCRIPT_START
CPU_COUNT=$(nproc)
QUIET=--quiet

export CCACHE_DIR=/home/user/cache/cc

function benchmark {
  BM_END=$(date +%s)
  echo $((($BM_END-$BM_START)/60))m $((($BM_END-$BM_START)%60))s
  BM_START=$BM_END
}

echo "Using CPUs: $CPU_COUNT"

rm -rf build output && mkdir -p build output cache/{download,cc}

################################################################################

echo -n "Downloading sources... "
cd cache/download

VERSION_BUSYBOX=1.36.1
VERSION_KERNEL=6.15.7
VERSION_OPENSBI=1.7

if [ ! -f busybox-${VERSION_BUSYBOX}.tar.bz2 ]; then
    wget $QUIET https://busybox.net/downloads/busybox-${VERSION_BUSYBOX}.tar.bz2
fi

if [ ! -f linux-${VERSION_KERNEL}.tar.xz ]; then
    wget $QUIET https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${VERSION_KERNEL}.tar.xz
fi

if [ ! -f opensbi-${VERSION_OPENSBI}.tar.gz ]; then
    wget $QUIET https://github.com/riscv-software-src/opensbi/archive/refs/tags/v${VERSION_OPENSBI}.tar.gz
    mv v${VERSION_OPENSBI}.tar.gz opensbi-${VERSION_OPENSBI}.tar.gz
fi

cd ~
benchmark

################################################################################

echo -n "Building busybox... "
tar -xf cache/download/busybox-* && mv busybox-* build/busybox
cd build/busybox

export KCONFIG_NOTIMESTAMP=1

make $QUIET defconfig > /dev/null 2>&1

LDFLAGS="--static" CFLAGS="-mabi=lp64" make \
    CC="ccache riscv64-unknown-linux-gnu-gcc" \
    CROSS_COMPILE=riscv64-unknown-linux-gnu- \
    --jobs=$CPU_COUNT \
    $QUIET \
    busybox > /dev/null 2>&1

mv busybox ~/output
cd ~
benchmark

################################################################################

echo -n "Building initramfs... "
cp -R input/initramfs build/initramfs && cd build/initramfs
mkdir bin && cp ~/output/busybox bin/

find . -exec touch -t 197001010000.00 {} +
find . ! -path . | sort | cpio \
    --reproducible --quiet --create --owner +0:+0 --format newc \
    > ~/output/initramfs.cpio

cd ~
benchmark

################################################################################

echo -n "Building kernel... "
tar -xf cache/download/linux-* && mv linux-* build/kernel

cd build/kernel

flags_y=(
    ARCH_RV64I BINFMT_ELF BINFMT_SCRIPT BLK_DEV_INITRD DEBUG_INFO DEBUG_INFO_DWARF5
    DEBUG_KERNEL DEVTMPFS DEVTMPFS_MOUNT GDB_SCRIPTS KGDB KGDB_SERIAL_CONSOLE NONPORTABLE
    RISCV_INTC RISCV_ISA_C SERIAL_SIFIVE SERIAL_SIFIVE_CONSOLE SIFIVE_PLIC TIMER_OF

    INITRAMFS_COMPRESSION_NONE
)

make $QUIET ARCH=riscv CFLAGS="-march=rv64imafdc -mabi=lp64d" \
    CROSS_COMPILE=riscv64-unknown-linux-gnu- CC="ccache riscv64-unknown-linux-gnu-gcc" \
    allnoconfig

for f in ${flags_y[@]}; do
    scripts/config --set-val $f y
done

scripts/config --set-val INITRAMFS_SOURCE \"/home/user/output/initramfs.cpio\"

make $QUIET ARCH=riscv CFLAGS="-march=rv64imafdc -mabi=lp64d" \
    CROSS_COMPILE=riscv64-unknown-linux-gnu- CC="ccache riscv64-unknown-linux-gnu-gcc" \
    olddefconfig

make $QUIET ARCH=riscv CFLAGS="-march=rv64imafdc -mabi=lp64d" \
    CROSS_COMPILE=riscv64-unknown-linux-gnu- CC="ccache riscv64-unknown-linux-gnu-gcc" \
    KBUILD_BUILD_TIMESTAMP="Thu Jan 1 00:00:00 UTC 1970" \
    KBUILD_BUILD_USER="builduser" \
    KBUILD_BUILD_HOST="buildhost" \
    $QUIET \
    --jobs=$CPU_COUNT \
    Image

mv arch/riscv/boot/Image ~/output/kernel

cd ~
benchmark

################################################################################

echo -n "Building opensbi... "
tar -xf cache/download/opensbi-* && mv opensbi-* build/opensbi
cd build/opensbi

dtc $QUIET \
  -O dtb \
  -o rv64.dtb \
  ~/input/rv64.dts

make $QUIET \
  CC="ccache riscv64-unknown-linux-gnu-gcc" \
  CROSS_COMPILE=riscv64-unknown-linux-gnu- \
  --jobs=$CPU_COUNT \
  PLATFORM=generic \
  PLATFORM_RISCV_XLEN=64 \
  FW_PAYLOAD_PATH=~/output/kernel \
  FW_FDT_PATH=rv64.dtb \
  > /dev/null 2>&1

gzip -9 -n -c build/platform/generic/firmware/fw_payload.bin > ~/output/rv64.gz

cd ~
benchmark

################################################################################

sha256sum -b output/* > output/sha256.txt

echo -n "Total execution time: "
BM_START=$SCRIPT_START && benchmark
